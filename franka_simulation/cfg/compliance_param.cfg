#!/usr/bin/env python
PACKAGE = "franka_simulation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# cartesian stiffness gains
gen.add("Kpx", double_t, 0, "Cartesian stiffness X", 3000, 0, 10000)
gen.add("Kpy", double_t, 0, "Cartesian stiffness Y", 3000, 0, 10000)
gen.add("Kpz", double_t, 0, "Cartesian stiffness Z", 3000, 0, 10000)

gen.add("Kox", double_t, 0, "Cartesian stiffness Yaw", 150, 0, 200)
gen.add("Koy", double_t, 0, "Cartesian stiffness Pitch", 150, 0, 200)
gen.add("Koz", double_t, 0, "Cartesian stiffness Roll", 150, 0, 200)

# nullspace stiffness (joint-space) gains
gen.add("Kp_nullspace", double_t, 0, "Nullspace stiffness (joint-space)", 200, 0, 1000)

# cartesian damping gains
gen.add("Dpx", double_t, 0, "Cartesian damping X", 100, 0, 200)
gen.add("Dpy", double_t, 0, "Cartesian damping Y", 100, 0, 200)
gen.add("Dpz", double_t, 0, "Cartesian damping Z", 100, 0, 200)

gen.add("Dox", double_t, 0, "Cartesian damping Yaw", 10, 0, 20)
gen.add("Doy", double_t, 0, "Cartesian damping Pitch", 10, 0, 20)
gen.add("Doz", double_t, 0, "Cartesian damping Roll", 10, 0, 20)

# cartesian integral gains
gen.add("Ipx", double_t, 0, "Cartesian integral X", 0, 0, 1)
gen.add("Ipy", double_t, 0, "Cartesian integral Y", 0, 0, 1)
gen.add("Ipz", double_t, 0, "Cartesian integral Z", 0, 0, 1)

gen.add("Iox", double_t, 0, "Cartesian integral Yaw", 0, 0, 0.5)
gen.add("Ioy", double_t, 0, "Cartesian integral Pitch", 0, 0, 0.5)
gen.add("Ioz", double_t, 0, "Cartesian integral Roll", 0, 0, 0.5)

exit(gen.generate(PACKAGE, "dynamic_compliance", "compliance_param"))